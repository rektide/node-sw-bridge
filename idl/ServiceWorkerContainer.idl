// @see https://w3c.github.io/ServiceWorker/#serviceworkercontainer-interface

[SecureContext, Exposed=(Window,Worker)]
interface ServiceWorkerContainer : EventTarget {
	readonly attribute ServiceWorker? controller;
	readonly attribute Promise<ServiceWorkerRegistration> ready;

	[NewObject] Promise<ServiceWorkerRegistration> register(USVString scriptURL, optional RegistrationOptions options);

	[NewObject] Promise<any> getRegistration(optional USVString clientURL = "");
	[NewObject] Promise<sequence<ServiceWorkerRegistration>> getRegistrations();

	void startMessages();


	// events
	attribute EventHandler oncontrollerchange;
	attribute EventHandler onmessage; // event.source of message events is ServiceWorker object
};
dictionary RegistrationOptions {
	USVString scope;
	WorkerType type = "classic";
	boolean useCache = false;
};
